{"version":3,"sources":["..\\..\\..\\ECMAScript6\\js\\9、set.js"],"names":["set","Set","console","log","set2","forEach","i","add","size","delete","has","clear","value","key"],"mappings":";;AAAA;;;;;;;AAOA,IAAIA,MAAM,IAAIC,GAAJ,CAAQ,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,EAAe,CAAf,EAAiB,CAAjB,EAAmB,CAAnB,EAAqB,CAArB,EAAuB,CAAvB,EAAyB,CAAzB,EAA2B,CAA3B,EAA6B,CAA7B,CAAR,CAAV;AACAC,QAAQC,GAAR,CAAYH,GAAZ;;AAEA,IAAII,OAAO,IAAIH,GAAJ,EAAX;AACA,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,EAAe,CAAf,EAAiB,CAAjB,EAAmB,CAAnB,EAAqB,CAArB,EAAuB,CAAvB,EAAyB,CAAzB,EAA2B,CAA3B,EAA6B,CAA7B,EAAgCI,OAAhC,CAAwC,UAACC,CAAD;AAAA,WAAKF,KAAKG,GAAL,CAASD,CAAT,CAAL;AAAA,CAAxC;AACAJ,QAAQC,GAAR,CAAYC,IAAZ;;AAEA;;;;AAIAF,QAAQC,GAAR,CAAYC,KAAKI,IAAjB;;AAEA;;;;;;;AAOAN,QAAQC,GAAR,CAAYC,KAAKG,GAAL,CAAS,CAAT,CAAZ,E,CAAyB;AACzBL,QAAQC,GAAR,CAAYC,KAAKK,MAAL,CAAY,CAAZ,CAAZ;AACAP,QAAQC,GAAR,CAAYC,KAAKM,GAAL,CAAS,CAAT,CAAZ;AACAR,QAAQC,GAAR,CAAYC,KAAKO,KAAL,EAAZ;AACAT,QAAQC,GAAR,CAAYC,IAAZ;;AAEAF,QAAQC,GAAR,CAAY,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,EAAe,CAAf,EAAiB,CAAjB,EAAmB,CAAnB,EAAqB,CAArB,EAAuB,CAAvB,EAAyB,CAAzB,EAA2B,CAA3B,EAA6B,CAA7B,EAAgCE,OAAhC,CAAwC,UAACO,KAAD,EAAOC,GAAP;AAAA,WAAaX,QAAQC,GAAR,CAAYU,GAAZ,EAAgBD,KAAhB,CAAb;AAAA,CAAxC,CAAZ","file":"9、set.js","sourcesContent":["/*  \r\n    set的是新的数据结构  类似于数组,但是区别于数组的是 所有成员是唯一的 不允许有重复的值\r\n    set是一个构造函数 生成set数据结构  接收一个数组作为参数\r\n\r\n    重点:\r\n        Set不是数组 是类似于数组 是一个新的数据结构 所有成员是唯一的\r\n*/\r\nlet set = new Set([1,2,3,4,5,6,6,6,6,1,2,3,4,5,6]);\r\nconsole.log(set);\r\n\r\nlet set2 = new Set();\r\n[1,2,3,4,5,6,6,6,6,1,2,3,4,5,6].forEach((i)=>set2.add(i));\r\nconsole.log(set2);\r\n\r\n/*  \r\n    size是Set构造函数的原型对象上的属性 返回的是实例成员的数量\r\n    Set.prototype.size\r\n*/\r\nconsole.log(set2.size);\r\n\r\n/*  \r\n    Set实例的方法:\r\n        add(value)：添加某个值，返回 Set 结构本身。\r\n        delete(value)：删除某个值，返回一个布尔值，表示删除是否成功。\r\n        has(value)：返回一个布尔值，表示该值是否为Set的成员。\r\n        clear()：清除所有成员，没有返回值。\r\n*/\r\nconsole.log(set2.add(1));//因为Set数据结构的原因 所有成员都是唯一的  所以通过add添加相同的值的时候 是无法添加进去的\r\nconsole.log(set2.delete(1));\r\nconsole.log(set2.has(1));\r\nconsole.log(set2.clear());\r\nconsole.log(set2);\r\n\r\nconsole.log([1,2,3,4,5,6,6,6,6,1,2,3,4,5,6].forEach((value,key)=>console.log(key,value)));"]}