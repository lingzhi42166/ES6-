{"version":3,"sources":["..\\..\\..\\ECMAScript6\\js\\5、字符串新增方法.js"],"names":["str","console","log","includes","startsWith","endsWith","str1","repeat","str2","trimStart","trimEnd"],"mappings":";;AAAA;;;;;;AAMA,IAAIA,MAAM,aAAV;AACAC,QAAQC,GAAR,CAAYF,IAAIG,QAAJ,CAAa,GAAb,CAAZ,E,CAA+B;AAC/BF,QAAQC,GAAR,CAAYF,IAAII,UAAJ,CAAe,GAAf,CAAZ,E,CAAiC;AACjCH,QAAQC,GAAR,CAAYF,IAAII,UAAJ,CAAe,GAAf,CAAZ,E,CAAiC;AACjCH,QAAQC,GAAR,CAAYF,IAAIK,QAAJ,CAAa,GAAb,CAAZ;;AAEA;;;;;;AAMA,IAAIC,OAAO,OAAX;AACAL,QAAQC,GAAR,CAAYI,KAAKC,MAAL,CAAY,CAAZ,CAAZ,E,CAA4B;AAC5BN,QAAQC,GAAR,CAAYI,KAAKC,MAAL,EAAZ,E,CAA2B;AAC3BN,QAAQC,GAAR,CAAYI,KAAKC,MAAL,CAAY,GAAZ,CAAZ,E,CAA8B;AAC9BN,QAAQC,GAAR,CAAYI,IAAZ,E,CAAiB;;AAEjB;;;;;;AAMA,IAAIE,sBAAJ;AACAP,QAAQC,GAAR,CAAYM,KAAKC,SAAL,EAAZ;AACAR,QAAQC,GAAR,CAAYM,KAAKE,OAAL,EAAZ","file":"5、字符串新增方法.js","sourcesContent":["/* \r\n    判断一个字符是否在一个字符串中:\r\n        includes()：返回布尔值，表示是否找到了参数字符串。\r\n        startsWith()：返回布尔值，表示参数字符串是否在原字符串的头部。\r\n        endsWith()：返回布尔值，表示参数字符串是否在原字符串的尾部。\r\n*/\r\nlet str = \"hello world\";\r\nconsole.log(str.includes(\"h\"));//true\r\nconsole.log(str.startsWith(\"h\"));//true \r\nconsole.log(str.startsWith(\"e\"));//false\r\nconsole.log(str.endsWith(\"d\"));\r\n\r\n/* \r\n    重复输出字符串:\r\n        repeat()   repeat=>重复\r\n        该方法返回一个新的字符串  不影响原字符串\r\n        原理 获取this的值 存入一个新的空字符串 然后根据传入的参数 进行拼接 然后返回出去 如果没有传值 那么就是返回一个空的字符串\r\n*/\r\nlet str1 = \"hello\";\r\nconsole.log(str1.repeat(2));//hellohello\r\nconsole.log(str1.repeat());// \"\" 空\r\nconsole.log(str1.repeat(2.9));//如果是小数则向下取整 如果是负数 则会报错\r\nconsole.log(str1)//hello\r\n\r\n/* \r\n    消除头部和尾部多余的空格\r\n        trimStart()=>消除头部多余空格\r\n        trimEnd()=>消除尾部多余空格\r\n        都是返回新的字符串  不会修改原字符串\r\n*/\r\nlet str2 = ` hello world `;\r\nconsole.log(str2.trimStart());\r\nconsole.log(str2.trimEnd());\r\n"]}